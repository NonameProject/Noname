@model Abitcareer.Mvc.ViewModels.LocalizedViewModels.SpecialityViewModel

<script sr1c="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/Notifications.js"></script>

@using (Html.BeginForm("AddSpeciality", "BackOffice", FormMethod.Post, new { Id = "editor"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
     <input type="button" id="exit"/>
        @Html.HiddenFor(x => x.Id)   
    
        <h3>@LocalizationResx.AddSpeciality</h3>
        <h4>@LocalizationResx.Speciality.ToUpper()</h4>
        
        @Html.LabelFor(m => m.Name, LocalizationResx.NameUA)
        @Html.EditorFor(m => m.Name)
        <br />
        @Html.LabelFor(m => m.EnglishName, LocalizationResx.NameEN)
        @Html.EditorFor(m => m.EnglishName)
        
        <h4>@LocalizationResx.Salaries.ToUpper()</h4>
    
        <ul class="salaries">
            @foreach (var item in Model.Salaries)
            {
                string yearEnding = LocalizationResx.EndAfterFour;
                <li>
                    @if (item.Key < 10 || item.Key > 20)
                    {
                        switch (item.Key % 10)
                        {
                            case 1:
                                yearEnding = LocalizationResx.FirstEnd;
                                break;
                            case 2:
                                yearEnding = LocalizationResx.SecondEnd;
                                break;
                            case 3:
                                yearEnding = LocalizationResx.ThirdEnd;
                                break;
                            default:
                                yearEnding = LocalizationResx.EndAfterFour;
                                break;
                        }
                    }
                    @Html.LabelFor(m => m.Salaries[item.Key], item.Key.ToString() + '-' + yearEnding + ' ' + LocalizationResx.Year)
                    @Html.EditorFor(m => m.Salaries[item.Key], new { @class = "form-control" })
                </li>
            }
            </ul>

       <div class="row">            
            <button type="submit" class="btn btn-default right">@LocalizationResx.Save</button>
            <input type="button" id="exitButton" class="btn btn-default right" value="@LocalizationResx.Cancel"/>
        </div>
}

<script>
    var customSubmit = function (event) {
            var data = $("#editor").serialize();
            var url = $("#editor").attr("action");
            $.post(url, data, function (d) {
                if (d)
                {
                    Notificate("@LocalizationResx.SpecialityAdditingSuccess");
                    $('#partialView').hide();
                    document.location.reload();
                }
                else
                    Notificate("@LocalizationResx.SpecialityAdditingFailed");
        });
        event.preventDefault();
    }

    document.getElementById("editor").onsubmit = function (e) { customSubmit(e); return false; }

    $('#exitButton').click(function () {
        $('#partialView').hide();
    });

    $('#exit').click(function () {
        $('#partialView').hide();
    });

</script>
